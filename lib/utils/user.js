// Generated by CoffeeScript 1.9.3
(function() {
  var cli, conf, config, helper, read, rest, user, userHelp, userList, userNew, userRestCreate;

  cli = require('cli');

  rest = require('restler');

  read = require('read');

  config = require('./conf');

  helper = require('./helper');

  conf = config.conf();

  userList = function(cb) {
    return rest.get(conf.box.host + "/users", {
      username: conf.root,
      password: conf.box.secret
    }).on('complete', function(data, response) {
      return helper.catchError(data, response, cb);
    }).on('error', helper.errHandler);
  };

  userRestCreate = function(email, password) {
    return rest.post(conf.box.host + '/users', {
      username: conf.root,
      password: conf.box.secret,
      data: JSON.stringify({
        email: email,
        password: password
      }),
      headers: {
        'Content-Type': 'application/json'
      }
    }).on('complete', function(data, response) {
      return helper.catchError(data, response, function(data) {
        if (data.errors) {
          cli.error("Cannot create user [" + email + "] in box [" + conf.box.id + "]");
          return cli.error(data.errors.email);
        } else {
          return cli.ok("User [" + email + "] created successfully in box [" + conf.box.id + "]");
        }
      });
    }).on('error', helper.errHandler);
  };

  userNew = function(args) {
    var params;
    cli.info("Create new user in box [" + conf.box.id + "]");
    if (args[1]) {
      params = args[1].split(":");
      return userRestCreate(params[0], params[1]);
    } else {
      return read({
        prompt: "Email: "
      }, function(err, email) {
        if (err) {
          return cli.error(err);
        }
        return read({
          prompt: "Password: "
        }, function(err, password) {
          if (err) {
            return cli.error(err);
          }
          return userRestCreate(email, password);
        });
      });
    }
  };

  userHelp = function() {
    return console.log("user list                -- Show users list in current box\nuser help                -- Show help\nuser new                 -- Create user via wizard\nuser new email:password  -- Create user one line");
  };

  user = function(args, options) {
    switch (args[0]) {
      case 'new':
        return userNew(args);
      case 'help':
        return userHelp();
      case 'list':
        cli.info("Users list in box [" + conf.box.id + "]");
        return userList(helper.userTable);
      default:
        return userHelp();
    }
  };

  module.exports = user;

}).call(this);
