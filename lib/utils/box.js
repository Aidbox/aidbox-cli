// Generated by CoffeeScript 1.12.2
(function() {
  var box, boxCurrent, boxHelp, boxList, boxNew, boxSwitch, cli, conf, config, helper, rest;

  cli = require('cli');

  rest = require('./rest');

  helper = require('./helper');

  config = require('./conf');

  conf = config.conf();

  boxList = function(cb) {
    return rest.get("/boxes").on('success', cb).on('fail', helper.errHandler).on('error', helper.errHandler);
  };

  boxCurrent = function() {
    if (conf.box && conf.box.id && conf.box.secret) {
      return cli.ok("You current box [" + conf.box.id + "]");
    } else {
      cli.info("No current box");
      cli.info("For switch to box, try: $ aidbox box use box_name");
      return cli.info("Or create new box: $ aidbox box new box_name");
    }
  };

  boxNew = function(name) {
    cli.info("Create new box [" + name + "]");
    return rest.post("/boxes", {
      data: JSON.stringify({
        id: name
      })
    }).on('success', function(data, response) {
      cli.ok("Box [" + name + "] created");
      boxSwitch(name);
      conf.box = data;
      return config.save(conf);
    }).on('fail', function(data) {
      return cli.error(data.message);
    }).on('error', helper.errHandler);
  };

  boxSwitch = function(name) {
    if (!name) {
      return cli.error("No box selected");
    }
    return rest.get("/boxes/" + name).on('success', function(data, response) {
      conf.box = data;
      config.save(conf);
      return cli.ok("Current box switch to [" + name + "]");
    }).on('fail', function() {
      return cli.error("Cannot connect to box [" + name + "]");
    }).on('error', helper.errHandler);
  };

  boxHelp = function() {
    return console.log("box                 -- Display current box\nbox help            -- Show help\nbox new <boxname>   -- Create new box with name <boxname>\nbox list            -- Show all available boxes\nbox use <boxname>   -- Switch current box to <boxname>\nbox destroy         -- Destroy current box [!not ready!]");
  };

  box = function(args, options) {
    if (args.length) {
      switch (args[0]) {
        case 'new':
          return boxNew(args[1]);
        case 'help':
          return boxHelp();
        case 'list':
          cli.info("Boxes list");
          return boxList(helper.boxTable);
        case 'use':
          return boxSwitch(args[1]);
        default:
          return boxHelp();
      }
    } else {
      return boxCurrent();
    }
  };

  module.exports = box;

}).call(this);
